{
  "name": "Libketama-c",
  "tagline": "\"C\" only implementation of ketama lib (https://github.com/RJ/ketama) using api for adding server instead of file (remove_server will be added in the future).",
  "body": "\"c\" only implementation of ketama lib (https://github.com/RJ/ketama) using\r\napi for adding server instead of file.\r\n\r\nThe repository now has only an xcode project, in future will be added more compilaiton types.\r\nAnyway the files libketama/ketama.c and libketama/md5.c compile also on linux and probably on window.\r\nOnly ketama.c has been update to expose new api and structure.\r\n\r\n\r\n \"C\" Example:\r\n\r\n```c++\r\nketama_t ktma;\r\nketama_init(&ktma);\r\nketama_add_server(&ktma, \"192.168.1.1:11211\", 60);\r\nketama_add_server(&ktma, \"192.168.1.2:11211\", 30);\r\nketama_add_server(&ktma, \"192.168.1.3:11211\", 10);\r\n\r\nketama_update_continuum(&ktma);\r\n\r\nketama_print_continuum(&ktma);\r\n\r\nint i;\r\nfor ( i = 0; i < 1000000; i++ ) {\r\n  char k[10];\r\n  sprintf( k, \"%d\", i );\r\n  unsigned int kh = ketama_hashi( k );\r\n  mcs* m = ketama_get_server(&ktma, k);\r\n\r\n  printf( \"hash:%u Continuum point:%u Host:%s\\n\", kh, m->point, m->ip );\r\n}\r\nketama_destroy(&ktma);\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}